cmdhistory=["(Step)" "Step" "(println \\"f\\")" "(clojure2.core/Step)" "(clojure2.core)" "(Step)" "Step" "(IntegrateCos 1)" "(GetCountStepCos 1)" "(GetParamCos 1)" "(ICos 1)" "Step" "(GetCountStepCos 1\\n                 )" "(IntegrateCos 1)" "(IntegrateCos 3.14)" "(IntegrateCos 3.141)" "Step" "(IntegrateCos 0.0625)" "(IntegrateCos 0.07)" "(IntegrateCos 0.0625)" "(IntegrateCos 3.141)" "(IntegrateCos 6.28)" "(IntegrateCos 6.2832)" "(IntegrateCos 6.27)" "(IntegrateCos 6.26)" "(IntegrateCos 6.2)" "(IntegrateCos 6.3)" "(IntegrateCos 6.35)" "(IntegrateCos 3.141)" "(Math/sin 1000)" "(IntegrateCos 1000)" "(IntegrateCos-memo 1)" "(time (IntegrateCos-memo 1))" "(time (IntegrateCos-memo 1000))" "(time (IntegrateCos-memo 1/1000))" "(time (IntegrateCos-memo (double 1/1000)))" "(IntegrateCos-memo 10)" "(IntegrateCos-memo 1)" "(main)" "(IntegrateCos-memo 1)" "(time (IntegrateCos-memo 1))" "(time (IntegrateCos-memo 1/1000))" "(time (IntegrateCos-memo 9000/1000))" "(time (IntegrateCos-memo 9001/1000))" "(time (IntegrateCos-memo 9002/1000))" "(time (IntegrateCos-memo 9003/1000))" "(time (IntegrateCos-memo 9001/1000))" "\\n(time (IntegrateCos-memo 9001/2000))" "(time (IntegrateCos-memo 9002/2000))" "(time (IntegrateCos-memo 9003/2000))" "(time (IntegrateCos-memo 9004/2000))" "(time (IntegrateCos-memo 9005/2000))" "(time (IntegrateCos-memo 9006/2000))" "(def naturals\\r\\n(lazy-seq\\r\\n(cons 1 (map inc naturals))))" "(time (nth naturals 1))" "(time (nth naturals 5))" "(time (nth naturals 6))" "(time (nth naturals 10000))" "(time (nth naturals 100000))" "(def natural\\r\\n   (lazy-seq\\r\\n   (future (Thread/sleep 1000) (cons 1 (map inc natural)))))" "(time (nth natural 1))" "(def natural\\r\\n      (lazy-seq\\r\\n      (future (Thread/sleep 1000) (cons 1 map inc natural))))" "(time (nth natural 1))" "(time (nth naturals 1))" "(time (nth naturals 100))" "(time (nth naturals 1000))" "(time (nth naturals 1000000))" "(time (nth naturals 10000000))" "(time (nth naturals 1000000))" "(time (nth naturals 10000000))" "(def fibs\\r\\n(lazy-cat '(0 1)\\r\\n(map + fibs (rest fibs))))" "(time (nth fibs 10))" "(time (nth fibs 100))" "(time (nth fibs 101))" "(time (nth fibs 10))" "(time (nth fibs 23))" "(time (nth fibs 50))" "(time (nth fibs 60))" "(time (nth fibs 70))" "(time (nth fibs 80))" "(time (nth fibs 90))" "(time (nth fibs 100))" "(time (nth naturals 1000000))" "(time (nth naturals 900000))" "(time (nth naturals 1000000))" "(time (nth naturals 1000001))" "(time (nth naturals 1000002))" "(time (nth naturals 1000000))" "(time (nth naturals 1000))" "(time (nth naturals 100000))" "(IntegrateCos 100)" "(time (IntegrateCos 100))" "(time (IntegrateCos-memo 100))" "(time (IntegrateCos-memo 1))" "(time (IntegrateCos 1))" "(time (IntegrateCos-memo 0.1))" "(time (IntegrateCos 0.1))" "(time (IntegrateCos-memo 1000))" "(time (IntegrateCos 1000))" "(IntegrateCos 1)" "((IntegrateCos) 1)" "(time ((IntegrateFun Math/cos) 1))" "(time ((IntegrateFun Math/Cos) 1))" "(time ((IntegrateFun Math\\\\cos) 1))" "((IntegrateFun Math/cos) 1)" "(IntegrateFun Math/cos)" "(IntegrateFun (fn [x] x))" "((IntegrateFun (fn [x] x)) 1)" "(IntegrateFun Math/sin)" "(time ((IntegrateFun (fn [x] x)) 1))" "(time ((IntegrateFun-memo (fn [x] x)) 1))" "(time ((IntegrateFun-memo (fn [x] x)) 10))" "((IntegrateFun (fn [x] x)) 7)" "(time ((IntegrateFun-memo (fn [x] x)) 1))" "(time ((IntegrateFun-memo (fn [x] x)) 10))" "(time ((IntegrateFun-memo (fn [x] x)) 1))" "(time ((IntegrateFun-memo (fn [x] x)) 10))" "(foo 1)" "(time ((IntegrateFun-memo foo) 0/01))" "(time ((IntegrateFun-memo foo) 0.01))" "(time ((IntegrateFun-memo foo) 0.02))"]
eclipse.preferences.version=1
